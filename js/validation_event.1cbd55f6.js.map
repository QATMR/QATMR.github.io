{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/EventCard.vue?1c5e","webpack:///src/components/EventCard.vue","webpack:///./src/components/EventCard.vue?55fc","webpack:///./src/components/EventCard.vue","webpack:///./src/data_handler.js","webpack:///./src/validation_event/ValidationView.vue?ef49","webpack:///./src/validation_event/ValidationView.vue?58f4","webpack:///./src/validation_event/Overview.vue?24a7","webpack:///src/validation_event/Overview.vue","webpack:///./src/validation_event/Overview.vue?6a3c","webpack:///./src/validation_event/Overview.vue","webpack:///src/validation_event/ValidationView.vue","webpack:///./src/validation_event/ValidationView.vue?f867","webpack:///./src/validation_event/ValidationView.vue?4446","webpack:///./src/validation_event/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","staticStyle","on","onDelete","staticRenderFns","component","chooseKfromArray","k","values","indexArray","sort","Math","random","ret","idx","get_offline_contents","passage_data","passage_ids","split","loadErrorPassages","passages","parsePassages","response","number_of_passages","status","console","log","json","all_passage_ids","keys","selected_passages","passage_id","passage","fetchPassagesWithRetries","number_of_passage","data_url","fetch","loadValidationDataWithRetriesOrNull","attrs","fatal_error_msg","_e","_m","class","active_tab","$event","switch_tab","previous_passage","staging","next_passage","showing_qa_panel","current_question","text","undefined","invalidate_selection","_l","char","index","highlight","should_highlight","select_highlight","is_in_selection_highlight","is_selected_answer","is_selected_answer_highlight","mousedown_text","mouseup_text","mouseenter_text","double_clicked_text","data_loaded","event_selection_error_message","domProps","display_selected_text","is_selection_empty","add_event","clear_selection","disable_event_editing","event_selection_button_clicked","event_selection_button_text","event_selection_button_tooltip_text","events_verified","event_verified_button_clicked","event_verify_button_text","num_events_verified","should_submit_enable","check_before_submit","submit_button_text","submission_error_msg","hidden","submission_not_ready","mturk_params","turkSubmitTo","assignmentId","directives","rawName","expression","target","composing","generated_answers","generated_answers_event","event","event_text","delete_event","isPreview","parsed_query_string","validation_task","worker_id","workerId","Vue","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/validation_event.1cbd55f6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"validation_event\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([3,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body\"},[_c('p',{staticClass:\"card-text\"},[_vm._v(\" \"+_vm._s(_vm.value)+\" \"),_c('a',{staticClass:\"card-link text-danger\",staticStyle:{\"cursor\":\"pointer\"},on:{\"click\":_vm.onDelete}},[_c('i',{staticClass:\"fas fa-trash-alt\"})])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <p class=\"card-text\">\n                {{value}} &nbsp;\n                <a\n                        class=\"card-link text-danger\"\n                        style=\"cursor: pointer\"\n                        v-on:click=\"onDelete\"\n                >\n                    <i class=\"fas fa-trash-alt\"></i>\n                </a>\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'EventCard',\n        props: ['value'],\n        computed: {\n        },\n        methods: {\n            onDelete: function(){\n                this.$emit(\"delete\");\n            },\n        },\n    }\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EventCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EventCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EventCard.vue?vue&type=template&id=dbbf73a4&\"\nimport script from \"./EventCard.vue?vue&type=script&lang=js&\"\nexport * from \"./EventCard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function chooseKfromArray(k, values) {\n    var indexArray = [];\n    for (let i = 0; i < values.length; i++) {\n        indexArray.push(i);\n    }\n\n    indexArray.sort(function(){\n        return 0.5 - Math.random();\n    });\n\n    let ret = [];\n\n    if (k > values.length){\n        k = values.length;\n    }\n\n    for (let i = 0; i < k; i++) {\n        let idx = indexArray[i];\n        ret.push(values[idx]);\n    }\n\n    return ret;\n}\n\nfunction get_offline_contents() {\n    let passage_data = `Tom falls in love with Becky Thatcher, a new girl in town, and persuades her to get \"engaged\" by kissing him. But their romance collapses when she learns Tom has been \"engaged\" previously to Amy Lawrence. Becky cries for a great deal of time until the other students begin to notice, and she becomes embarrassed. Shortly after Becky shuns him, he accompanies Huckleberry Finn to the graveyard at night, where they witness a trio of body snatchers, Dr. Robinson, Muff Potter, and Injun Joe, getting into a fight in which Robinson is murdered by Injun Joe. Tom and Huckleberry Finn swear a blood oath to not tell anyone about the murder, as they feel that if they do, Injun Joe would murder them.\n    Natasha visits the Moscow opera, where she meets Hélène and her brother Anatole. Anatole has since married a Polish woman whom he has abandoned in Poland. He is very attracted to Natasha and determined to seduce her, and conspires with his sister to do so. Anatole succeeds in making Natasha believe he loves her, eventually establishing plans to elope. Natasha writes to Princess Maria, Andrei's sister, breaking off her engagement. At the last moment, Sonya discovers her plans to elope and foils them. Natasha learns from Pierre of Anatole's marriage. Devastated, Natasha makes a suicide attempt and is left seriously ill.\n    Alex is a 15-year-old living in near-future dystopian England who leads his gang on a night of opportunistic, random \"ultra-violence\". Alex's friends (\"droogs\" in the novel's Anglo-Russian slang, 'Nadsat') are Dim, a slow-witted bruiser who is the gang's muscle; Georgie, an ambitious second-in-command; and Pete, who mostly plays along as the droogs indulge their taste for ultra-violence. Characterised as a sociopath and hardened juvenile delinquent, Alex also displays intelligence, quick wit, and a predilection for classical music; he is particularly fond of Beethoven, referred to as \"Lovely Ludwig Van\". The novella begins with the droogs sitting in their favourite hangout, the Korova Milk Bar, and drinking \"milk-plus\" — a beverage consisting of milk laced with the customer's drug of choice — to prepare for a night of mayhem. They assault a scholar walking home from the public library; rob a store, leaving the owner and his wife bloodied and unconscious; beat up a beggar; then scuffle with a rival gang. Joyriding through the countryside in a stolen car, they break into an isolated cottage and terrorise the young couple living there, beating the husband and raping his wife.\n    In March 1997, Maj. Jack Reacher is briefed by his superior Leon Garber on a troubling development in Carter's Crossing, Mississippi: a woman has been found murdered, her throat slit, with signs of rape, and the military is concerned that one of the potential suspects seems to be Cpt. Reed Riley, a commander at Fort Kelham, a nearby Army Ranger base, with a reputation as a ladykiller. Garber informs Reacher that another MP, Maj. Duncan Munro, has been assigned to investigate the murder; his job is to go undercover and ensure that Munro's investigation doesn't damage the military's public image. He also puts Reacher in touch with Col. James John Frazer, a Senate liaison who warns Reacher that Reed's father, Senator Carlton Riley, a member of the Armed Services Committee, is threatening to impose harsh budget cuts on the army if his son is targeted. Posing as a drifter, Reacher takes up residence in a local inn and goes for a meal, where he meets the local sheriff, Elizabeth Deveraux. A former Marine, she quickly deduces Reacher's true identity and purpose, but permits him to stay as long as he doesn't interfere with her investigation. Reacher does so anyway, and learns that the dead woman, Janice Chapman, was the third woman murdered in Carter's Crossing in just the last few months; the other two were young women from the poorer, largely African American section of town. Reacher's old friend Sgt. Frances Neagley arrives with a warning to stay away from Deveraux, who she claims was dishonorably discharged from the service following an incident with a fellow Marine, but Jack disregards her advice.\n    Agnes Grey is the daughter of Mr. Grey, a minister of modest means, and Mrs. Grey, a woman who left her wealthy family and married purely out of love. Mr. Grey tries to increase the family's financial standing, but the merchant he entrusts his money to dies in a wreck, and the lost investment plunges the family into debt. Agnes, her sister Mary, and their mother all try to keep expenses low and bring in extra money, but Agnes is frustrated that everyone treats her like a child. To prove herself and to earn money, she is determined to get a position as a governess. Eventually, she obtains a recommendation from a well-placed acquaintance, is offered a position, and secures her parents' permission. With some misgivings, she travels to Wellwood house to work for the Bloomfield family. The Bloomfields are rich and much crueller than Agnes had expected. Mrs. Bloomfield spoils her children while Mr. Bloomfield constantly finds fault with Agnes's work. The children are unruly and Agnes is held accountable for them despite being given no real authority over them. Tom, the oldest Bloomfield child, is particularly abusive and even tortures small animals. In less than a year, Agnes is relieved of her position, since Mrs. Bloomfield thinks that her children are not learning quickly enough. Agnes returns home.`;\n    let passage_ids = [577, 41, 363, 767, 318];\n    return {\n        passage_ids: passage_ids,\n        passage_data: passage_data.split('\\n')\n    };\n}\n\nfunction loadErrorPassages() {\n    let passages = get_offline_contents();\n    return passages;\n}\n\nasync function parsePassages(response, number_of_passages) {\n    if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' +\n            response.status);\n        return loadErrorPassages();\n    }\n\n    const data = await response.json();\n\n    let all_passage_ids = Object.keys(data);\n\n    let selected_passages;\n\n    if (number_of_passages > 0){\n        selected_passages = chooseKfromArray(number_of_passages, all_passage_ids);\n    }else{\n        // Or we select all passages\n        selected_passages=all_passage_ids;\n    }\n\n\n    // Get number_of_passages random passages to show the user.\n\n    let ret = [];\n\n    for (let i = 0; i < selected_passages.length; i++) {\n        let passage_id = selected_passages[i];\n        const passage = data[passage_id];\n        passage[\"passage_id\"] = passage_id;\n        ret.push(passage);\n        console.log(passage);\n    }\n\n    return ret;\n}\n\nasync function fetchPassagesWithRetries(n, number_of_passage, data_url) {\n    for (let i = 0; i < n; i++){\n        try{\n            const response = await fetch(data_url);\n            return await parsePassages(response, number_of_passage);\n        }catch (e) {\n            console.log(e);\n        }\n    }\n\n    return get_offline_contents();\n}\n\nasync function loadValidationDataWithRetriesOrNull(n, data_url) {\n    for (let i = 0; i < n; i++){\n        try{\n            const response = await fetch(data_url);\n            const data = await response.json();\n            return data;\n        }catch (e) {\n            console.log(\"Fetch \" + data_url +\" failed\", e);\n        }\n    }\n    console.log(\"Failed...\");\n    return null;\n}\n\nmodule.exports = {\n    parsePassages,\n    chooseKfromArray,\n    fetchPassagesWithRetries,\n    loadValidationDataWithRetriesOrNull\n};","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ValidationView.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ValidationView.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[(_vm.fatal_error_msg)?_c('div',{staticClass:\"alert alert-danger\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.fatal_error_msg)+\" \")]):_vm._e(),_vm._m(0),_c('nav',[_c('div',{staticClass:\"nav nav-pills nav-fill\",attrs:{\"id\":\"nav-tab\",\"role\":\"tablist\"}},[_c('a',{staticClass:\"nav-item nav-link\",class:{\n              'active': _vm.active_tab === 'overview'\n             },on:{\"click\":function($event){return _vm.switch_tab('overview')}}},[_vm._v(\"Overview\")]),_c('a',{staticClass:\"nav-item nav-link\",class:{\n              'active': _vm.active_tab === 'working'\n             },on:{\"click\":function($event){return _vm.switch_tab('working')}}},[_vm._v(\"Working Area\")])])]),(_vm.active_tab === 'overview')?_c('div',[_c('overview')],1):_vm._e(),(_vm.show_tab_working)?_c('div',[_c('div',{staticClass:\"card mb-4\"},[_vm._m(1),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"container\"},[_vm._m(2),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-4\",staticStyle:{\"z-index\":\"0\"}},[_c('div',{staticClass:\"card sticky-top\"},[_c('div',{staticClass:\"card-header\"},[_c('h4',{staticStyle:{\"text-align\":\"center\"}},[_c('button',{staticClass:\"btn btn-secondary\",staticStyle:{\"float\":\"left\"},attrs:{\"type\":\"button\",\"data-balloon-pos\":\"up\",\"data-balloon-length\":\"large\",\"aria-label\":\"You can move back and forth without losing your annotations. However, do not refresh this page using the refresh button of your browser.\"},on:{\"click\":_vm.previous_passage}},[_c('i',{staticClass:\"fas fa-chevron-left\"})]),_c('span',{staticStyle:{\"margin\":\"0 auto\",\"display\":\"inline-block\"}},[_vm._v(\" Passage \"+_vm._s(_vm.staging.passage_id + 1)+\" / \"+_vm._s(_vm.number_of_passages)+\" \")]),_c('button',{staticClass:\"btn btn-secondary\",staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"button\",\"data-balloon-pos\":\"up\",\"data-balloon-length\":\"large\",\"aria-label\":\"You don't need to use all passages if you can get enough good questions from some of them. If you do use more than one passage, please ask a similar number of questions per passage.\"},on:{\"click\":_vm.next_passage}},[_c('i',{staticClass:\"fas fa-chevron-right\"})])])]),(_vm.staging.showing_qa_panel\n                    && _vm.staging.current_question.text!==null\n                    && _vm.staging.current_question.text!==undefined\n                    && _vm.staging.current_question.text!=='')?_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body\"},[_c('p',[_c('strong',[_c('span',{staticStyle:{\"color\":\"DodgerBlue\"}},[_vm._v(\"[Question] \"+_vm._s(_vm.staging.current_question.text))])])])])]):_vm._e(),_c('div',{staticClass:\"card-body passage-display-box\"},[(_vm.data_loaded)?_c('div',{staticClass:\"card-text\"},[_c('div',[_c('div',{staticClass:\"passage-text\",on:{\"mouseleave\":_vm.invalidate_selection}},_vm._l((_vm.staging.passage),function(char,index){return _c('span',{key:char.index,staticClass:\"noselect\",class:{\n                                    highlight: _vm.should_highlight(index),\n                                    select_highlight: _vm.is_in_selection_highlight(index),\n                                    is_selected_answer: _vm.is_selected_answer_highlight(index),\n                                  },on:{\"mousedown\":function($event){return _vm.mousedown_text(index)},\"mouseup\":function($event){return _vm.mouseup_text(index)},\"mouseenter\":function($event){return _vm.mouseenter_text(index)},\"dblclick\":function($event){return _vm.double_clicked_text(index)}}},[_vm._v(_vm._s(char))])}),0),(!_vm.data_loaded)?_c('div',{staticClass:\"spinner-border\",attrs:{\"role\":\"status\"}},[_c('span',{staticClass:\"sr-only\"})]):_vm._e()])]):_vm._e()]),(_vm.has_event_error)?_c('div',{staticClass:\"alert alert-danger fade show\",attrs:{\"role\":\"alert\"}},[_c('strong',[_vm._v(_vm._s(_vm.event_selection_error_message))])]):_vm._e(),_c('div',{staticClass:\"card-body\"},[(!_vm.staging.showing_qa_panel)?_c('p',[_vm._m(3)]):_vm._e(),(!_vm.staging.showing_qa_panel)?_c('div',{staticClass:\"input-group mb-3\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Event not selected\",\"aria-label\":\"Recipient's username\",\"aria-describedby\":\"basic-addon2\",\"disabled\":\"\"},domProps:{\"value\":_vm.display_selected_text}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"button\",\"disabled\":_vm.is_selection_empty},on:{\"click\":_vm.add_event}},[_vm._v(\"Add Event\")])]),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-danger\",attrs:{\"type\":\"button\",\"data-balloon-pos\":\"up\",\"aria-label\":\"Clear selection\"},on:{\"click\":function($event){return _vm.clear_selection(false)}}},[_c('i',{staticClass:\"fas fa-times\"})])])]):_vm._e(),_c('button',{staticClass:\"btn btn-primary mt-4\",attrs:{\"hidden\":this.disable_event_editing,\"type\":\"button\",\"id\":\"next_question-event\"},on:{\"click\":_vm.event_selection_button_clicked}},[_vm._v(\" \"+_vm._s(_vm.event_selection_button_text)+\" \"),_c('span',{staticClass:\"button-question-tooltip\",attrs:{\"data-balloon-pos\":\"up\",\"data-balloon-length\":\"large\",\"aria-label\":_vm.event_selection_button_tooltip_text}},[_vm._v(\" ? \")])]),(this.staging.showing_qa_panel)?_c('button',{class:{\n                                                    'btn btn-warning mt-4': this.events_verified[this.staging.passage_id]===0,\n                                                    'btn btn-success mt-4': this.events_verified[this.staging.passage_id]===1,\n                                                },attrs:{\"hidden\":this.disable_event_editing,\"type\":\"button\",\"id\":\"event_verified\",\"disabled\":this.events_verified[this.staging.passage_id]===1},on:{\"click\":_vm.event_verified_button_clicked}},[_vm._v(\" \"+_vm._s(_vm.event_verify_button_text())+\" \"),_c('span',{staticClass:\"button-question-tooltip\",attrs:{\"data-balloon-pos\":\"up\",\"data-balloon-length\":\"large\",\"aria-label\":\"Press this button only if you think all events are correct. Editing the events automatically revokes your verification and you'll have to verify again.\"}},[_vm._v(\" ? \")])]):_vm._e()]),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",class:{\n                            'bg-danger': this.num_events_verified<this.number_of_passages,\n                            'bg-success': this.num_events_verified>=this.number_of_passages,\n                          }},[_c('strong',[_vm._v(\"Overall Progress on All Passages\")])]),_c('ul',{staticClass:\"list-group list-group-flush\"},[_c('li',{staticClass:\"list-group-item\",class:{\n                            'list-group-item-danger': this.num_events_verified<this.number_of_passages,\n                            'list-group-item-success': this.num_events_verified>=this.number_of_passages,\n                          }},[_vm._v(\" Passages finished: \"),_c('span',{staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(this.num_events_verified)+\" / \"+_vm._s(this.number_of_passages))])])])]),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col text-center\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm\",class:{\n                                  'btn-dark': !_vm.should_submit_enable,\n                                  'btn-success': _vm.should_submit_enable\n                                },attrs:{\"id\":\"ready_submit\",\"type\":\"button\",\"disabled\":!_vm.should_submit_enable},on:{\"click\":_vm.check_before_submit}},[_vm._v(\" \"+_vm._s(_vm.submit_button_text)+\" \"),_c('span',{staticClass:\"button-question-tooltip\",attrs:{\"data-balloon-pos\":\"down\",\"data-balloon-length\":\"large\",\"aria-label\":\"When this button is yellow, you can still submit, but it's not suggested if you do this very often.\"}},[_vm._v(\" ? \")])])])]),(_vm.has_submission_error)?_c('div',{staticClass:\"alert alert-danger fade show\",attrs:{\"role\":\"alert\"}},[_c('strong',[_vm._v(_vm._s(_vm.submission_error_msg))])]):_vm._e(),_c('div',{staticClass:\"row justify-content-center\"},[_c('form',{class:{hidden: _vm.submission_not_ready},attrs:{\"name\":\"mturk_form\",\"method\":\"post\",\"id\":\"mturk-external-submit-form\",\"action\":_vm.mturk_params.turkSubmitTo}},[_c('input',{attrs:{\"type\":\"hidden\",\"name\":\"assignmentId\",\"id\":\"assignmentId\"},domProps:{\"value\":_vm.mturk_params.assignmentId}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.generated_answers),expression:\"generated_answers\"}],attrs:{\"id\":\"generated_answers\",\"name\":\"generated_answers\",\"type\":\"hidden\"},domProps:{\"value\":(_vm.generated_answers)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.generated_answers=$event.target.value}}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.generated_answers_event),expression:\"generated_answers_event\"}],attrs:{\"id\":\"generated_answers_event\",\"name\":\"generated_answers_event\",\"type\":\"hidden\"},domProps:{\"value\":(_vm.generated_answers_event)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.generated_answers_event=$event.target.value}}})])])])])]),(!this.staging.showing_qa_panel)?_c('div',{staticClass:\"col-lg-8\"},_vm._l((_vm.sorted_staging_events),function(event,idx){return _c('event-card',{key:idx,attrs:{\"value\":_vm.event_text(event)},on:{\"delete\":function($event){return _vm.delete_event(event)}}})}),1):_vm._e()])])])])]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col\"},[_c('h1',{staticClass:\"text-center\"},[_vm._v(\"Question-Answering on Temporal Relations (Event Validation)\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-header\"},[_c('h2',[_vm._v(\"Your working area\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"card-text\"},[_c('span',{staticStyle:{\"color\":\"Tomato\"}},[_vm._v(\"[WARNING] \")]),_c('strong',[_vm._v(\"You will *lose* all your answers if you refresh this page.\")])]),_c('div',{staticClass:\"card-text\"},[_c('span',{staticStyle:{\"color\":\"Tomato\"}},[_vm._v(\"[WARNING] \")]),_c('strong',[_vm._v(\"We know the answer to some of these event candidates. If we see unreasonably low performance on these candidates, we will reject your hits.\")])]),_c('div',{staticClass:\"card-text\"},[_c('span',{staticStyle:{\"color\":\"DodgerBlue\"}},[_vm._v(\"[TIP] \")]),_c('strong',[_vm._v(\"An event must be a verb (including \\\"be\\\" verbs) or a noun. Feel free to check our guidelines \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"https://qatmr-qualification.github.io/\"}},[_vm._v(\"here\")]),_vm._v(\" when you're not sure about certain rules.\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('strong',[_c('span',{attrs:{\"id\":\"eventSelIns\"}},[_c('small',[_vm._v(\"Double-click on single words (words connected by \\\"-\\\" are single) as events in the passage.\")])])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row mb-4 mt-4\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"collapse show\"},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"card-text\"},[_c('strong',[_vm._v(\"This is the event validation step. In this step, your job is to correct mistakes in the event candidates given to you. You can add new events or delete wrong events in every passage.\")]),_c('hr'),_c('strong',[_vm._v(\"For almost every passage, we know the gold answer to some of the event candidates you see, and if your performance is unreasonably bad on these, we keep the right to reject your hits. The only goal is to avoid spammers, so don't worry if you are doing it carefully.\")])])])])])])])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"row mb-4 mt-4\">\n            <div class=\"col\">\n                <div class=\"card\">\n                    <div class=\"collapse show\">\n                        <div class=\"card-body\">\n                            <div class=\"card-text\">\n                                <strong>This is the event validation step. In this step, your job is to correct mistakes in the event candidates given to you. You can add new events or delete wrong events in every passage.</strong>\n                                <hr>\n                                <strong>For almost every passage, we know the gold answer to some of the event candidates you see, and if your performance is unreasonably bad on these, we keep the right to reject your hits. The only goal is to avoid spammers, so don't worry if you are doing it carefully.</strong>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'Overview',\n        props: {\n\n        },\n\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Overview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Overview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Overview.vue?vue&type=template&id=224696b2&\"\nimport script from \"./Overview.vue?vue&type=script&lang=js&\"\nexport * from \"./Overview.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"container\">\n        \n        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"fatal_error_msg\">\n            {{fatal_error_msg}}\n        </div>\n\n        <div class=\"row mb-4\">\n            <div class=\"col\">\n                <h1 class=\"text-center\">Question-Answering on Temporal Relations (Event Validation)</h1>\n            </div>\n        </div>\n\n\n        <nav>\n            <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n                <a class=\"nav-item nav-link\"\n                   v-on:click=\"switch_tab('overview')\"\n                   v-bind:class=\"{\n              'active': active_tab === 'overview'\n             }\"\n                >Overview</a>\n\n                <a class=\"nav-item nav-link\"\n                   v-on:click=\"switch_tab('working')\"\n                   v-bind:class=\"{\n              'active': active_tab === 'working'\n             }\"\n                >Working Area</a>\n            </div>\n        </nav>\n\n        <div v-if=\"active_tab === 'overview'\">\n            <overview></overview>\n        </div>\n\n        <div v-if=\"show_tab_working\">\n            <div class=\"card mb-4\">\n\n                <!--Title infos-->\n                <div class=\"card-header\">\n                    <h2>Your working area</h2>\n                </div>\n\n                <!---->\n                <div class=\"card-body\">\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"card-body\">\n                                <div class=\"card-text\">\n                                    <span style='color:Tomato;'>[WARNING] </span><strong>You will *lose* all your answers if you refresh this page.</strong>\n                                </div>\n                                <div class=\"card-text\">\n                                    <span style='color:Tomato;'>[WARNING] </span><strong>We know the answer to some of these event candidates. If we see unreasonably low performance on these candidates, we will reject your hits.</strong>\n                                </div>\n                                <div class=\"card-text\">\n                                    <span style='color:DodgerBlue;'>[TIP] </span><strong>An event must be a verb (including \"be\" verbs) or a noun. Feel free to check our guidelines <a target=\"_blank\" href=\"https://qatmr-qualification.github.io/\">here</a> when you're not sure about certain rules.</strong>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"row\">\n\n                            <!--Left panel for selecting events-->\n                            <div class=\"col-sm-4\" style=\"z-index: 0\">\n                                <div class=\"card sticky-top\">\n                                    <div class=\"card-header\">\n                                        <h4\n                                                style=\"text-align: center\"\n                                        >\n                                            <button\n                                                    type=\"button\"\n                                                    class=\"btn btn-secondary\"\n                                                    style=\"float: left\"\n                                                    v-on:click=\"previous_passage\"\n                                                    data-balloon-pos=\"up\"\n                                                    data-balloon-length=\"large\"\n                                                    aria-label=\"You can move back and forth without losing your annotations. However, do not refresh this page using the refresh button of your browser.\"\n                                            ><i class=\"fas fa-chevron-left\"></i></button>\n                                            <span\n                                                    style=\"margin:0 auto; display: inline-block\"\n                                            >\n                          Passage {{staging.passage_id + 1}} / {{number_of_passages}}\n                      </span>\n\n                                            <button\n                                                    type=\"button\"\n                                                    class=\"btn btn-secondary\"\n                                                    style=\"float: right\"\n                                                    v-on:click=\"next_passage\"\n                                                    data-balloon-pos=\"up\"\n                                                    data-balloon-length=\"large\"\n                                                    aria-label=\"You don't need to use all passages if you can get enough good questions from some of them. If you do use more than one passage, please ask a similar number of questions per passage.\"\n                                            ><i class=\"fas fa-chevron-right\"></i></button>\n                                        </h4>\n                                    </div>\n                                    <div class=\"card\" v-if=\"staging.showing_qa_panel\n                    && staging.current_question.text!==null\n                    && staging.current_question.text!==undefined\n                    && staging.current_question.text!==''\">\n                                        <div class=\"card-body\">\n                                            <p>\n                                                <strong>\n                                                    <span style='color:DodgerBlue;'>[Question] {{staging.current_question.text}}</span>\n                                                </strong>\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-body passage-display-box\">\n                                        <div class=\"card-text\" v-if=\"data_loaded\">\n                                            <div>\n                                                <div class=\"passage-text\" v-on:mouseleave=\"invalidate_selection\">\n                          <span\n                                  v-for=\"(char, index) in staging.passage\"\n                                  v-bind:key=\"char.index\"\n                                  v-on:mousedown=\"mousedown_text(index)\"\n                                  v-on:mouseup=\"mouseup_text(index)\"\n                                  v-on:mouseenter=\"mouseenter_text(index)\"\n                                  v-on:dblclick=\"double_clicked_text(index)\"\n                                  class=\"noselect\"\n                                  v-bind:class=\"{\n                                    highlight: should_highlight(index),\n                                    select_highlight: is_in_selection_highlight(index),\n                                    is_selected_answer: is_selected_answer_highlight(index),\n                                  }\"\n                          >{{char}}</span>\n                                                </div>\n                                                <!--  Make sure there is NO space between the actual data and the span tag. Otherwise it will mess up the display format.-->\n                                                <div class=\"spinner-border\" role=\"status\" v-if=\"!data_loaded\">\n                                                    <span class=\"sr-only\"></span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"alert alert-danger fade show\" role=\"alert\" v-if=\"has_event_error\">\n                                        <strong>{{event_selection_error_message}}</strong>\n                                    </div>\n\n                                    <div class=\"card-body\">\n                                        <p v-if=\"!staging.showing_qa_panel\">\n                                            <strong>\n                          <span id=\"eventSelIns\"><small>Double-click on single words (words connected by \"-\" are single) as events in the passage.</small>\n                        </span>\n                                            </strong>\n                                        </p>\n\n                                        <div\n                                                class=\"input-group mb-3\"\n                                                v-if=\"!staging.showing_qa_panel\"\n                                        >\n                                            <input\n                                                    type=\"text\"\n                                                    class=\"form-control\"\n                                                    v-bind:value=\"display_selected_text\"\n                                                    placeholder=\"Event not selected\"\n                                                    aria-label=\"Recipient's username\"\n                                                    aria-describedby=\"basic-addon2\" disabled>\n                                            <div class=\"input-group-append\">\n                                                <button\n                                                        class=\"btn btn-primary\"\n                                                        type=\"button\"\n                                                        v-on:click=\"add_event\"\n                                                        :disabled=\"is_selection_empty\"\n                                                >Add Event</button>\n                                            </div>\n                                            <div class=\"input-group-append\">\n                                                <button\n                                                        class=\"btn btn-outline-danger\"\n                                                        type=\"button\"\n                                                        v-on:click=\"clear_selection(false)\"\n                                                        data-balloon-pos=\"up\"\n                                                        aria-label=\"Clear selection\"\n                                                ><i class=\"fas fa-times\"></i></button>\n                                            </div>\n                                        </div>\n\n                                        <button\n                                                :hidden=\"this.disable_event_editing\"\n                                                type=\"button\"\n                                                id=\"next_question-event\"\n                                                class=\"btn btn-primary mt-4\"\n                                                v-on:click=\"event_selection_button_clicked\">\n                                            {{event_selection_button_text}}\n                                            <span\n                                                    class=\"button-question-tooltip\"\n                                                    data-balloon-pos=\"up\"\n                                                    data-balloon-length=\"large\"\n                                                    :aria-label=\"event_selection_button_tooltip_text\"\n                                            > ?\n                        </span>\n                                        </button>\n                                        <button\n                                                :hidden=\"this.disable_event_editing\"\n                                                type=\"button\"\n                                                id=\"event_verified\"\n                                                v-bind:class=\"{\n                                                    'btn btn-warning mt-4': this.events_verified[this.staging.passage_id]===0,\n                                                    'btn btn-success mt-4': this.events_verified[this.staging.passage_id]===1,\n                                                }\"\n                                                v-if=this.staging.showing_qa_panel\n                                                :disabled=\"this.events_verified[this.staging.passage_id]===1\"\n                                                v-on:click=\"event_verified_button_clicked\">\n                                            {{event_verify_button_text()}}\n                                            <span\n                                                    class=\"button-question-tooltip\"\n                                                    data-balloon-pos=\"up\"\n                                                    data-balloon-length=\"large\"\n                                                    aria-label=\"Press this button only if you think all events are correct. Editing the events automatically revokes your verification and you'll have to verify again.\"\n                                            > ?\n                        </span>\n                                        </button>\n\n                                    </div>\n                                    <div class=\"card\">\n                                        <div class=\"card-header\"\n                                             v-bind:class=\"{\n                            'bg-danger': this.num_events_verified<this.number_of_passages,\n                            'bg-success': this.num_events_verified>=this.number_of_passages,\n                          }\"\n                                        >\n                                            <strong>Overall Progress on All Passages</strong>\n                                        </div>\n\n                                        <ul class=\"list-group list-group-flush\">\n                                            <li class=\"list-group-item\"\n                                                v-bind:class=\"{\n                            'list-group-item-danger': this.num_events_verified<this.number_of_passages,\n                            'list-group-item-success': this.num_events_verified>=this.number_of_passages,\n                          }\"\n                                            >\n                                                Passages finished: <span style=\"float: right\">{{this.num_events_verified}} / {{this.number_of_passages}}</span>\n                                            </li>\n<!--                                            <li class=\"list-group-item\"-->\n<!--                                                v-bind:class=\"{-->\n<!--                            'list-group-item-light': !(questions_created_satisfied && questions_modified_satisfied && questions_warmup_satisfied),-->\n<!--                            'list-group-item-success': questions_created_satisfied && questions_modified_satisfied && questions_warmup_satisfied,-->\n<!--                          }\"-->\n<!--                                            >-->\n<!--                                                Pay: <span style=\"float: right\">${{pay_base_amount | currency}} + $ {{ pay_bonus_amount | currency}} = $ {{ pay_total_amount | currency}}</span>-->\n<!--                                            </li>-->\n\n                                        </ul>\n                                    </div>\n                                    <div class=\"card\">\n                                        <!--Submit button-->\n\n<!--                                        <div class=\"row mb-4\">-->\n<!--                                            <div class=\"col text-center\">-->\n<!--                                                <button-->\n<!--                                                        type=\"button\"-->\n<!--                                                        class=\"btn btn-info btn-sm\"-->\n<!--                                                        v-on:click=\"focus_feedback\">-->\n<!--                                                    Give Us Feedback-->\n<!--                                                    <span-->\n<!--                                                            class=\"button-question-tooltip\"-->\n<!--                                                            data-balloon-pos=\"down\"-->\n<!--                                                            data-balloon-length=\"large\"-->\n<!--                                                            aria-label=\"Type in the box below.\"-->\n<!--                                                    > ? </span>-->\n<!--                                                </button>-->\n<!--                                            </div>-->\n<!--                                        </div>-->\n\n                                        <div class=\"row mb-4\">\n                                            <div class=\"col text-center\">\n                                                <button\n                                                        id=\"ready_submit\"\n                                                        type=\"button\"\n                                                        class=\"btn btn-secondary btn-sm\"\n                                                        v-bind:class=\"{\n                                  'btn-dark': !should_submit_enable,\n                                  'btn-success': should_submit_enable\n                                }\"\n                                                        v-on:click=\"check_before_submit\"\n                                                        :disabled=\"!should_submit_enable\">\n                                                    {{submit_button_text}}\n                                                    <span\n                                                            class=\"button-question-tooltip\"\n                                                            data-balloon-pos=\"down\"\n                                                            data-balloon-length=\"large\"\n                                                            aria-label=\"When this button is yellow, you can still submit, but it's not suggested if you do this very often.\"\n                                                    > ? </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                        <div class=\"alert alert-danger fade show\" role=\"alert\" v-if=\"has_submission_error\">\n                                            <strong>{{submission_error_msg}}</strong>\n                                        </div>\n\n                                        <div class=\"row justify-content-center\">\n                                            <form\n                                                    name='mturk_form'\n                                                    method='post'\n                                                    id='mturk-external-submit-form'\n                                                    v-bind:action=\"mturk_params.turkSubmitTo\"\n                                                    v-bind:class=\"{hidden: submission_not_ready}\"\n                                            >\n                                                <input type='hidden' name='assignmentId' id='assignmentId' v-bind:value=\"mturk_params.assignmentId\"/>\n                                                <input id=\"generated_answers\" name=\"generated_answers\" type=\"hidden\" v-model=\"generated_answers\">\n                                                <input id=\"generated_answers_event\" name=\"generated_answers_event\" type=\"hidden\" v-model=\"generated_answers_event\">\n                                                <!--<input type='submit' class=\"btn btn-success btn-sm\" id='submitButton' name=\"submitButton\" value='Click here to submit HIT'>-->\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-8\" v-if=!this.staging.showing_qa_panel>\n                                <event-card class=\"\"\n                                            v-for=\"(event, idx) in sorted_staging_events\"\n                                            v-bind:key=\"idx\"\n                                            v-bind:value=\"event_text(event)\"\n                                            @delete=\"delete_event(event)\"\n                                >\n                                </event-card>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n<!--            <div class=\"row\" >-->\n<!--                <div class=\"col\" style=\"z-index: -1\">-->\n<!--                    <div class=\"card mb-4\">-->\n<!--                        <div class=\"card-header\">-->\n<!--                            <h3>-->\n<!--                                Please leave your feedback here-->\n<!--                            </h3>-->\n<!--                        </div>-->\n<!--                        <div class=\"card-body\">-->\n<!--                            <div id=\"comment\">-->\n<!--                <textarea-->\n<!--                        id=\"feedback-form\"-->\n<!--                        rows=\"15\"-->\n<!--                        class=\"form-control\"-->\n<!--                        placeholder=\"Please leave your feedback here.\"-->\n<!--                        v-model=\"feedback\">-->\n<!--                </textarea>-->\n<!--                            </div>-->\n<!--                        </div>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--            </div>-->\n        </div>\n\n\n    </div>\n</template>\n\n<script>\n    import _ from \"lodash\"\n    import DataHandler from \"../data_handler.js\"\n    // import QuestionCard from \"../components/ValidationQuestionCard\"\n    import EventCard from \"../components/EventCard\"\n    // import Payment from \"../components/Payment\"\n    import Overview from \"./Overview\"\n    // import StepByStep from \"../components/StepByStep\"\n\n    import Vue from 'vue'\n    import queryString from \"query-string\";\n\n    const question_keywords = ['before','after','since','when','until','earlier','later','while','during','meanwhile','meantime','in the future', 'in the past','what happens','start','begin','began','begun','end','stop'];\n    const default_questions = ['what has happened?', 'what happened?', 'what has happened so far?', 'what is happening?', 'what is happening now?', 'what is happening right now?', 'what will happen?', 'what will happen in the future?', 'what may happen in the future?', 'what may happen?', 'what might happen?', 'what might happen in the future?'];\n    const bad_question_keywords = [' causes', ' caused', ' cause', 'because ', ' lead to', ' led to', ' leads to'];\n\n    const number_of_passages = 4;\n    const required_question_count = 4;\n\n    export default {\n        name: 'ValidationInterface',\n        components: {\n            // 'question-card': QuestionCard,\n            'event-card': EventCard,\n            // 'payment': Payment,\n            'overview': Overview,\n            // 'step-by-step': StepByStep,\n        },\n        data: function(){\n            return {\n\n                /**\n                 *\n                 * Tab switching.\n                 *\n                 */\n                active_tab: \"overview\",\n                frozen: true,\n                seconds_remain: 20,\n\n                required_question_count: required_question_count,\n                number_of_passages: number_of_passages,\n                max_bonus: 16.0,\n                pay_base_amount: 8.0,\n                bonus_per_question: 0.5,\n\n                data_loaded: false, // Oneway flag.\n\n                //We have methods that modify this data in an unwatched way, so HTML rendering should no reply\n                // on anything from this object. Use render use staging object instead.\n                annotations: {},\n                events_verified: {},\n                num_events_verified: 0,\n                same_worker: false,\n                /**\n                 * {\n                 *     passage_id: {\n                 *         events: [(0, 10), (56, 62)],\n                 *         questions: {\n                 *             qid: {\n                 *                    question_id,\n                 *                    isDefaultQuestion: true,\n                 *                    isAnswered: true,\n                 *                    answer: [(0, 10)],\n                 *                    text: []\n                 *                  }\n                 *         }\n                 *     }\n                 * }\n                 */\n\n                // Current data displayed on interface.\n                current: {\n                    selection_state: \"none\",\n                    selection: {\n                        start: -1,\n                        end: -1,\n                        current: -1,\n                    },\n\n                    selected_char_indices: {\n\n                    },\n\n\n                    selected_char_indices_for_answers: {\n\n                    },\n\n\n\n                    // Should never decrease.\n                    question_id_counter : 0,\n\n                    // faithful counter of how many question created. aka. should decrease when deleted.\n                    question_created: 0,\n\n                    question_modified: 0,\n\n                    // faithful counter of how many default question has been answered.\n                    default_question_count: 0,\n\n                    // How many default questions is created.\n                    default_question_answered_count: 0,\n                },\n                /**\n                 *      Staging data for current passage.\n                 */\n                // Staged annotations.\n                staging: {\n                    pinned_question_id: null,\n                    showing_qa_panel: false,\n                    passage_id: -1,\n                    passage: \"\",\n\n                    current_question: {\n                        _position: null,\n                        question_id: null,\n                        text: \"\",\n                        is_default_question: false,\n                        answers:{},\n                        question_is_derived_from: null,\n                    },\n\n                    events: {},\n                    questions: {},\n                    //   Example questions format.\n                    //   qid: {\n                    //      question_id: \"\",\n                    //      isDefaultQuestion: true,\n                    //      isAnswered: true,\n                    //      answer: [(0, 10)],\n                    //      text: \"\"\n                    //   }\n                },\n\n                /**\n                 *      Misc data.\n                 */\n                feedback: \"\",\n\n\n                question_order_counter : 0,\n\n                /**\n                 *      Error reporting related data.\n                 */\n                event_selection_error_message : \"\",\n                has_event_error: false,\n\n                qa_error_message : \"\",\n                has_qa_error: false,\n\n                submission_error_msg :\"\",\n                has_submission_error:false,\n\n\n                /**\n                 *      Submission form control data.\n                 */\n                submission_not_ready: true,\n                generated_answers: \"\",\n                generated_answers_event: \"\",\n                disable_event_editing:false,\n\n                fatal_error_msg:null,\n\n                mturk_params: {\n                    assignmentId: \"\",\n                    hitId: \"\",\n                    turkSubmitTo: \"\",\n                    workerId: \"\",\n                    isPreview: true,\n                }\n            };\n        },\n\n        mounted: async function(){\n            // Parse the current query string.\n            // console.log(location.search);\n            const parsed_query_string = queryString.parse(location.search);\n            // console.log(parsed_query_string);\n            // console.log(parsed_query_string);\n\n            const assignmentId = parsed_query_string.assignmentId;\n\n            if (assignmentId === \"ASSIGNMENT_ID_NOT_AVAILABLE\"){\n                console.log(\"Preview mode.\");\n                this.mturk_params.isPreview = true;\n            }\n\n            const hitId = parsed_query_string.hitId;\n            const turkSubmitTo = parsed_query_string.turkSubmitTo;\n            const workerId = parsed_query_string.workerId;\n\n            this.mturk_params.turkSubmitTo = turkSubmitTo + \"/mturk/externalSubmit\";\n            this.mturk_params.workerId = workerId;\n            this.mturk_params.hitId = hitId;\n            this.mturk_params.assignmentId = assignmentId;\n            this.required_question_count = 0;\n\n            this.disable_event_editing = false;\n\n            let data_url = 'validation_test_batch.json';\n            if (\"data_url\" in parsed_query_string) {\n                data_url = parsed_query_string.data_url;\n            }\n\n            const self = this;\n            let load_events = \"load_events\" in parsed_query_string ? parsed_query_string.load_events : \"1\";\n            load_events = load_events === \"1\";\n\n            const validation_multiple_tasks = await DataHandler.loadValidationDataWithRetriesOrNull(3, data_url);\n\n            if (validation_multiple_tasks == null){\n                // Something bad happened.\n                console.log('validation_task == null');\n                this.fatal_error_msg = \"Failed to load data due to network problems. Please try refreshing this page or try again later.\";\n                return;\n            }\n            this.number_of_passages = validation_multiple_tasks.length;\n            let idx = 0;\n            _.each(validation_multiple_tasks, (validation_task) =>{\n                if (validation_task.worker_id === workerId){\n                    // Same work, need to instruct worker to return this hit.\n                    this.same_worker = true;\n                    alert(\"This hit contains annotations that were previously provided by yourself. Since you shouldn't verify your own annotations, please skip this hit and move onto the next one.\");\n                    this.show_submission_error(\"This hit contains annotations that were previously provided by yourself. Since you shouldn't verify your own annotations, please skip this hit and move onto the next one.\");\n                }\n\n                _.each(validation_task.passages, (passage) => {\n                    const real_passage_id = passage.events[0].passageID;\n                    const events = {};\n\n                    if(load_events){\n                        _.each(passage.events[0].answer.indices, (start_end_str) => {\n                            const str_pair = start_end_str.substring(1, start_end_str.length-1).split(\",\")\n                            const start = parseInt(str_pair[0]);\n                            const end = parseInt(str_pair[1]) - 1;\n                            const key = start + \"_\" + end;\n                            events[key] = {\n                                start, end, key\n                            }\n                        });\n                    }\n\n\n                    const questions = {};\n                    _.each(passage.question_answer_pairs, (question) => {\n                        const {question_id, is_default_question} = question;\n                        const text = question.question;\n                        const is_answered = false;\n                        const answers = {};\n                        self.required_question_count = self.required_question_count + 1;\n                        questions[question_id] = {\n                            question_id,\n                            is_default_question,\n                            answers,\n                            is_answered,\n                            text\n                        }\n                    });\n\n                    self.annotations[idx] = {\n                        passage: passage.passage,\n                        events: events,\n                        questions: questions,\n                        passage_id: real_passage_id,\n                    };\n                    self.events_verified[idx] = 0;\n                    idx++;\n                });\n            });\n\n\n            this.data_loaded = true;\n            this.stage_new_passage(0);\n\n            // timer to release the submit button\n\n            const update_remain_time_timer = setInterval(\n                function(){\n                    self.seconds_remain -= 1;\n                    if (self.seconds_remain < 0){\n                        self.frozen = false;\n                        clearInterval(update_remain_time_timer);\n                    }\n                }, 1000);\n\n            // setTimeout(function(){\n            //   }, 1000*60*self.frozen_time);\n\n\n\n        },\n        computed: {\n            sorted_questions: function(){\n                const self = this;\n                return _.orderBy(this.staging.questions, function(q){\n                    if (q.question_id === self.staging.pinned_question_id){\n                        return -99999;\n                    }\n                    return -q._position;\n                });\n                // return [];\n            },\n\n            sorted_staging_events: function(){\n                let ret = _.sortBy(Object.values(this.staging.events), [\n                    event => {\n                        return event.start;\n                    },\n                    event => {\n                        return event.end;\n                    }\n                ]);\n                return ret;\n            },\n\n            sorted_staging_answers: function(){\n                let ret = _.sortBy(Object.values(this.staging.current_question.answers), [\n                    answer => {\n                        return answer.start;\n                    },\n                    answer => {\n                        return answer.end;\n                    }\n                ]);\n                return ret;\n            },\n\n            event_selection_button_text: function(){\n                if (this.staging.showing_qa_panel){\n                    return \"Edit Event Selection\";\n                }else{\n                    return \"Finish Selection\";\n                }\n            },\n\n            event_selection_button_tooltip_text: function(){\n                if (this.staging.showing_qa_panel){\n                    return \"Click to add/delete your event selections. You need to verify again once you go into this.\";\n                }else{\n                    return \"Click to highlight your event selections in text and then you can ask questions on the right panel.\";\n                }\n            },\n\n            save_question_button_text: function(){\n                if (this.staging.current_question.question_id !== null){\n                    return \"Save Question & Answer(s)\";\n                }\n\n                if (this.staging.current_question.question_is_derived_from !== null){\n                    return \"Add New Derived Question\";\n                }\n\n                return \"Add Question & Answer(s)\";\n\n            },\n\n\n            /**\n             * If the submit button should be disabled.\n             *                               Questions created: <span style=\"float: right\">{{current.question_created}} / {{this.required_question_count}}</span>\n             *</li>\n             **<li class=\"list-group-item\">\n             *    Default questions answered: <span style=\"float: right\">{{current.default_question_answered_count}} / {{current.default_question_count}}</span>\n             * @returns {boolean}\n             */\n            should_submit_enable: function(){\n                if(this.frozen){\n                    return false;\n                }\n                return this.num_events_verified >= this.number_of_passages && !this.same_worker;\n            },\n\n            /**\n             * If the Next passage button is disabled.\n             * @returns {boolean}\n             */\n            next_passage_disabled: function(){\n                return false;\n            },\n\n\n            /**\n             * If the Previouse passage button is disabled.\n             * @returns {boolean}\n             */\n            prev_passage_disabled: function(){\n                return false;\n            },\n\n            /**\n             * How many questions has the user created.\n             * @returns {number}\n             */\n\n            pay_bonus_amount: function(){\n                let total_bonus = Math.max(0, this.bonus_per_question * (this.current.question_created - this.required_question_count));\n                return Math.min(total_bonus, this.max_bonus);\n            },\n\n            pay_total_amount: function(){\n                return this.pay_bonus_amount + this.pay_base_amount;\n            },\n\n            /**\n             * Display the current selection, if the current selection is too long, it will only show the first 19 chars.\n             */\n            display_selected_text: function(){\n                if (this.current.selection.start >= 0 && this.current.selection.end >= 0){\n                    let surface = this.staging.passage.substring(this.current.selection.start, this.current.selection.end+1);\n                    if (surface.length > 20){\n                        return surface.substring(0, 19) + \" ...\";\n                    }\n                    return surface;\n                }else{\n                    return \"\";\n                }\n            },\n\n            is_selection_empty: function(){\n                return (this.current.selection.start === -1) || (this.current.selection.end === -1);\n            },\n\n            show_tab_instruction: function(){\n                return this.active_tab === \"instruction\";\n            },\n\n            show_tab_working: function(){\n                return this.active_tab === \"working\";\n            },\n\n            submit_button_text: function(){\n                if(!this.frozen){\n                    return \"Submit Response on All Passages\";\n                }\n                return \"Submit (enables in \"+this.seconds_remain+\" seconds)\";\n            },\n\n            suggested_modified_question_count: function(){\n                return Math.ceil(this.required_question_count/3);\n            },\n\n            questions_created_satisfied: function(){\n                return this.current.question_created >= this.required_question_count;\n            },\n\n            questions_warmup_satisfied: function(){\n                return this.current.default_question_answered_count >= this.current.default_question_count;\n            },\n\n            questions_modified_satisfied: function () {\n                return this.current.question_modified >= this.suggested_modified_question_count;\n            },\n\n        },\n\n        methods: {\n            event_verify_button_text: function(){\n                if(this.events_verified[this.staging.passage_id]===0){\n                    return \"Click to save your result\";\n                }else{\n                    return \"Saved!\";\n                }\n                // return \"All Are Correct Now?\";\n            },\n\n\n            switch_tab: function(tab){\n                this.active_tab = tab;\n            },\n            focus_nav_tab: function(){\n                document.getElementById('nav-tab').scrollIntoView();\n            },\n            /**\n             *\n             * Functions that handles error messages.\n             *\n             */\n\n            hide_event_error: function(){\n                this.has_event_error = false;\n            },\n\n            hide_qa_error: function(){\n                this.has_qa_error=false;\n            },\n\n            hide_submission_error: function(){\n                this.has_submission_error=false;\n            },\n\n            show_event_error: function(msg){\n                this.event_selection_error_message = msg;\n                this.has_event_error = true;\n            },\n\n            show_qa_error: function(msg){\n                this.qa_error_message = msg;\n                this.has_qa_error=true;\n            },\n\n            show_submission_error: function(msg){\n                this.submission_error_msg = msg;\n                this.has_submission_error=true;\n            },\n            /**\n             *\n             * Highlight related functions\n             *\n             */\n\n            reset_highlight_map: function(){\n                for (let i = 0; i < this.staging.passage.length; i++) {\n                    Vue.set(this.current.selected_char_indices, i, false);\n                    Vue.set(this.current.selected_char_indices_for_answers, i, false);\n                }\n            },\n\n\n            /**\n             *\n             * Functions for handling event selections.\n             *\n             */\n            event_text: function(event){\n                return this.staging.passage.substring(event.start, event.end+1);\n            },\n\n            is_event_text_single_token: function(){\n                let start = this.current.selection.start;\n                let end = this.current.selection.end;\n\n                if(this.staging.passage.substring(start, end+1).trim().includes(\" \")){\n                    return false;\n                }\n\n                return true;\n            },\n\n            can_add_event: function(){\n                let start = this.current.selection.start;\n                let end = this.current.selection.end;\n                let surface = this.staging.passage.substring(start, end+1).trim();\n                if(surface.length === 0){\n                    this.show_event_error(\"The is event empty.\");\n                    return false;\n                }\n\n                if(!this.is_event_text_single_token()){\n                    this.show_event_error(\"The correct event should be a single word\");\n                    return false;\n                }\n\n                // By design, we cannot add any duplicated events as answers to the same questinos.\n                // So we don't have to check for this case.\n                // if(this.is_answer_duplicated()){\n                //   this.show_qa_error(\"This answer is duplicated!\");\n                //   return false;\n                // }\n\n                this.hide_event_error();\n                return true;\n            },\n\n            trim_start_end_to_nearest_space: function(){\n                const old_start = this.current.selection.start;\n                const old_end = this.current.selection.end;\n\n                if (old_start === -1 || old_end === -1){\n                    return;\n                }\n\n                let new_start = old_start;\n                let new_end = old_end;\n\n                for(let i = old_start; i <= old_end; i++){\n                    if (this.staging.passage.charAt(i) !== \" \"){\n                        new_start = i;\n                        break;\n                    }\n                }\n\n                for(let i = old_end; i >= old_start; i--){\n                    if (this.staging.passage.charAt(i) !== \" \"){\n                        new_end = i;\n                        break;\n                    }\n                }\n\n                this.current.selection.start = new_start;\n                this.current.selection.end = new_end;\n            },\n\n            add_event: function(){\n\n                this.trim_start_end_to_nearest_space();\n\n                let start = this.current.selection.start;\n                let end = this.current.selection.end;\n                let event_key = start + \"_\" + end;\n\n                const event = {start, end, key: event_key};\n\n                if (!this.can_add_event(event)){\n                    return false;\n                }\n\n                const existing_event_count = Object.keys(this.staging.events).length;\n\n                Vue.set(this.staging.events, event_key, event);\n                this.current.selection.start = -1;\n                this.current.selection.end = -1;\n                this.current.selection.current = -1;\n                this.current.selection.state = \"none\";\n\n                const updated_event_count = Object.keys(this.staging.events).length;\n\n                const has_update = updated_event_count > existing_event_count;\n\n                if (has_update) {\n                    if(updated_event_count === 1){\n                        this.add_default_questions_to_passage();\n                    }\n                }\n                for(let i = event.start; i <= event.end; i++){\n                    Vue.set(this.current.selected_char_indices, i, true);\n                }\n                // only add default questions when we have events annotated\n\n                return true;\n            },\n\n            add_default_questions_to_passage: function(){\n                let passage_id = this.staging.passage_id;\n                let default_q0 =  {\n                    question_id: passage_id + \"-question-d0\",\n                    is_default_question: true,\n                    question_is_derived_from: null,\n                    is_answered: false,\n                    answers: {},\n                    text: \"What event has already finished?\",\n                    _position: this.get_new_question_order_counter()\n                };\n\n                let default_q1 =  {\n                    question_id: passage_id + \"-question-d1\",\n                    is_default_question: true,\n                    question_is_derived_from: null,\n                    is_answered: false,\n                    answers: {},\n                    text: \"What event has begun but has not finished?\",\n                    _position: this.get_new_question_order_counter()\n                };\n\n                let default_q2 =  {\n                    question_id: passage_id + \"-question-d2\",\n                    is_default_question: true,\n                    question_is_derived_from: null,\n                    is_answered: false,\n                    answers: {},\n                    text: \"What will happen in the future?\",\n                    _position: this.get_new_question_order_counter()\n                };\n                Vue.set(this.staging.questions, passage_id + \"-question-d0\", default_q0);\n                Vue.set(this.staging.questions, passage_id + \"-question-d1\", default_q1);\n                Vue.set(this.staging.questions, passage_id + \"-question-d2\", default_q2);\n                this.current.default_question_count += 3;\n            },\n\n            delete_event: function(event){\n                this.$delete(this.staging.events, event.key);\n                if(Object.keys(this.staging.events).length===0){\n                    this.remove_default_questions_in_passage();\n                }\n                for(let i = event.start; i <= event.end; i++){\n                    Vue.set(this.current.selected_char_indices, i, false);\n                }\n            },\n\n            remove_default_questions_in_passage: function(){\n                let passage_id = this.staging.passage_id;\n                Vue.delete(this.staging.questions,passage_id + \"-question-d0\");\n                Vue.delete(this.staging.questions,passage_id + \"-question-d1\");\n                Vue.delete(this.staging.questions,passage_id + \"-question-d2\");\n                this.current.default_question_count -= 3;\n            },\n\n            should_highlight: function(index){\n                return this.current.selected_char_indices[index] === true;\n            },\n\n\n            do_highlight_all_event_selection: function(){\n                for (const key in this.staging.events){\n                    const event = this.staging.events[key];\n                    for(let i = event.start; i <= event.end; i++){\n                        Vue.set(this.current.selected_char_indices, i, true);\n                    }\n                }\n            },\n\n\n            event_selection_button_clicked(){\n\n                this.clear_selection();\n\n                if(!this.staging.showing_qa_panel){\n                    // Currently not showing QA panel.\n                    // this.add_event();\n                    // this.do_highlight_all_event_selection();\n                }else{\n                    for(let i = 0; i <= this.staging.passage.length; i++){\n                        Vue.set(this.current.selected_char_indices, i, false);\n                    }\n                    // this.events_verified[this.staging.passage_id] = 0;\n                }\n                this.do_highlight_all_event_selection();\n                this.staging.showing_qa_panel = !this.staging.showing_qa_panel;\n                if(this.events_verified[this.staging.passage_id] === 1){\n                    Vue.set(this.events_verified, this.staging.passage_id, 0);\n                    console.log(this.num_events_verified);\n                    this.num_events_verified -= 1;\n                    console.log(this.num_events_verified);\n                }\n\n            },\n\n            event_verified_button_clicked(){\n                if(this.events_verified[this.staging.passage_id]===0) {\n                    Vue.set(this.events_verified, this.staging.passage_id, 1);\n                    this.num_events_verified += 1;\n                }\n            },\n\n            /**\n             *\n             *\n             * Functions for modifying current answers.\n             *\n             *\n             */\n\n            is_answer_not_event: function(){\n                let start = this.current.selection.start;\n                let end = this.current.selection.end;\n                let event_key = start + \"_\" + end;\n\n                if (!this.staging.events.hasOwnProperty(event_key)){\n                    return true;\n                }\n\n                return false;\n            },\n\n            can_add_answer: function(event){\n                if(event.start === -1 || event.end === -1){\n                    this.show_qa_error(\"The answer cannot be empty!\");\n                    return false;\n                }\n\n                if (this.staging.current_question.text.length === 0){\n                    this.show_qa_error(\"This question is empty\");\n                    return false;\n                }\n\n\n                // By design, we cannot add any duplicated events as answers to the same questinos.\n                // So we don't have to check for this case.\n                // if(this.is_answer_duplicated()){\n                //   this.show_qa_error(\"This answer is duplicated!\");\n                //   return false;\n                // }\n\n                if(this.is_answer_not_event()){\n                    this.show_qa_error(\"Choose an answer from highlighted events! If you're sure of your answer, you can first add it to the event list by clicking the 'Edit Event Selection' button on the left!\");\n                    return false;\n                }\n\n                this.hide_qa_error();\n                return true;\n            },\n\n            add_answer: function(){\n\n                this.trim_start_end_to_nearest_space();\n\n                let start = this.current.selection.start;\n                let end = this.current.selection.end;\n                let event_key = start + \"_\" + end;\n\n                const event = {start, end, key: event_key};\n\n                if (!this.can_add_answer(event)){\n                    return false;\n                }\n\n\n                if(this.can_add_answer(event)){\n                    let start = this.current.selection.start;\n                    let end = this.current.selection.end;\n                    let event_key = start + \"_\" + end;\n                    const event = {start, end, key: event_key};\n                    console.log(event_key);\n                    Vue.set(this.staging.current_question.answers, event_key, event);\n                    console.log(this.staging.current_question.answers)\n                    console.log(\"Updating highlight map.\");\n                    // Highlight the spans.\n                    for(let i = start; i <= end; i++){\n                        Vue.set(this.current.selected_char_indices_for_answers, i, true);\n                    }\n                }else{\n                    console.log(\"Cannot add answer.\");\n                }\n            },\n\n            delete_answer: function(event){\n                this.$delete(this.staging.current_question.answers, event.key);\n                for(let i = event.start; i <= event.end; i++){\n                    Vue.set(this.current.selected_char_indices_for_answers, i, false);\n                }\n            },\n\n            is_selected_answer_highlight: function(idx){\n                return this.current.selected_char_indices_for_answers[idx] === true;\n            },\n\n            highlight_selected_answer: function(start, end){\n                for(let i = start; i <= end; i++){\n                    Vue.set(this.current.selected_char_indices_for_answers, i, true);\n                }\n            },\n\n\n            /**\n             */\n\n            is_question_suspicious: function(){\n                let trimmedQuestion = this.staging.current_question.text.toLowerCase();\n                // must not include the following words\n                for (let id in bad_question_keywords){\n                    const keyword = bad_question_keywords[id];\n                    if (trimmedQuestion.includes(keyword)){\n                        return true;\n                    }\n                }\n\n                // must not be one of the default questions\n                for (let id in default_questions){\n                    const keyword = default_questions[id];\n                    if (trimmedQuestion.includes(keyword)){\n                        return true;\n                    }\n                }\n\n                // must ends with ?\n                // if(!trimmedQuestion.endsWith('?'))\n                //   return true;\n\n                // must include one or more of the following words\n                for (let id in question_keywords){\n                    const keyword = question_keywords[id];\n                    if (trimmedQuestion.includes(keyword)){\n                        return false;\n                    }\n                }\n\n                return true;\n\n            },\n\n            on_question_text_change: function(){\n                if(this.is_question_suspicious()){\n                    this.show_qa_error(\"This question is suspicious and fails to pass our auto-checker! You can still add it if you're sure.\");\n                }else{\n                    if (!this.staging.current_question.text.endsWith(\"?\")){\n                        this.show_qa_error('You may forget to put \"?\" at the end of the question.');\n                    }else{\n                        this.hide_qa_error();\n                    }\n\n                }\n            },\n            /**\n             *\n             * Save current question to staging area. This should update the question cards.\n             *\n             */\n\n            current_question_is_duplicated: function(){\n                for(const key in this.staging.questions){\n                    if (key === this.staging.current_question.question_id){\n                        // We are editing the existing question, we don't have to check it with the existing one.\n                        continue;\n                    }\n                    const question = this.staging.questions[key];\n                    if (this.staging.current_question.text === question.text){\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            can_add_question: function(){\n                if (this.staging.current_question.text.length === 0){\n                    this.show_qa_error(\"This question is empty\");\n                    return false;\n                }\n\n                if(this.current_question_is_duplicated()){\n                    this.show_qa_error(\"This question is the same as an existing one!\");\n                    return false;\n                }\n\n                /**\n                 * Check for duplicated questions.\n                 */\n\n\n                this.hide_qa_error();\n                return true;\n            },\n\n            get_new_question_id: function(){\n                const ret = this.current.question_id_counter;\n                this.current.question_id_counter = this.current.question_id_counter + 1;\n                return this.staging.passage_id + \"-question-\" + ret;\n            },\n\n            add_or_save_question: function(){\n                if(this.can_add_question()){\n                    let question_id = this.staging.current_question.question_id;\n                    let is_new_question = false;\n\n                    if (question_id === null){\n                        question_id = this.get_new_question_id();\n                        is_new_question = true;\n                    }\n\n                    const _position = this.staging.current_question._position === null ? this.get_new_question_order_counter() : this.staging.current_question._position;\n\n                    if (!this.staging.current_question.is_answered){\n                        this.current.question_created = this.current.question_created + 1;\n                    }\n\n                    Vue.set(this.staging.questions, question_id, {\n                        question_id: question_id,\n                        is_default_question: this.staging.current_question.is_default_question,\n                        is_answered: true,\n                        answers: _.cloneDeep(this.staging.current_question.answers),\n                        text: this.staging.current_question.text,\n                        question_is_derived_from: this.staging.current_question.question_is_derived_from,\n                        _position: _position\n                    });\n\n                    if (is_new_question){\n                        this.current.question_created = this.current.question_created + 1;\n                        if(this.staging.current_question.question_is_derived_from !== null){\n                            this.current.question_modified += 1;\n                        }\n                    }\n\n                    // Now we reset the working questions.\n                    this.staging.current_question.text = \"\";\n                    this.staging.current_question.is_default_question = false;\n                    this.staging.current_question._position = null;\n                    this.staging.current_question.question_id = null;\n                    this.staging.current_question.question_is_derived_from = null;\n                    this.staging.current_question.answers = {};\n                    this.clear_current_answer_highlight();\n\n                }else{\n                    console.log(\"Cannot add question.\");\n                }\n            },\n\n            clear_current_answer_highlight: function(){\n                for(let i = 0; i <= this.staging.passage.length; i++){\n                    Vue.set(this.current.selected_char_indices_for_answers, i, false);\n                }\n            },\n\n            /**\n             *\n             * Handlers for buttons on question cards.\n             *\n             */\n            delete_question: function(question){\n                const question_id = question.question_id;\n\n                this.$delete(this.staging.questions, question_id);\n                this.current.question_created = this.current.question_created - 1;\n                if(question.question_is_derived_from !== null){\n                    this.current.question_modified -= 1;\n                }\n            },\n\n            derive_question: function(question){\n                this.clear_current_answer_highlight();\n\n                const question_id = question.question_id;\n\n                this.staging.current_question.question_id = null;\n                this.staging.current_question.text = question.text;\n                this.staging.current_question.is_default_question = question.is_default_question;\n                this.staging.current_question.question_is_derived_from = question_id;\n                this.staging.current_question.answers = {};\n                this.staging.current_question._position = null;\n                this.staging.current_question.is_answered = question.is_answered;\n\n                Vue.nextTick(function(){\n                    document.getElementById(\"question-input\").focus();\n                });\n            },\n\n            edit_question: function(question){\n                this.clear_current_answer_highlight();\n\n                const question_id = question.question_id;\n\n                this.staging.current_question.question_id = question_id;\n                this.staging.current_question.text = question.text;\n                this.staging.current_question.is_default_question = question.is_default_question;\n                this.staging.current_question.question_is_derived_from = question.question_is_derived_from;\n                this.staging.current_question.answers = _.cloneDeep(question.answers);\n                this.staging.current_question._position = question._position;\n                this.staging.current_question.is_answered = question.is_answered;\n\n                for (const key in question.answers){\n                    const event = question.answers[key];\n                    this.highlight_selected_answer(event.start, event.end);\n                }\n\n                Vue.nextTick(function(){\n                    document.getElementById(\"question-input\").focus();\n                });\n            },\n\n            is_editing: function(question){\n                return this.staging.current_question.question_id === question.question_id;\n            },\n\n            pin_to_top: function(question){\n                const current_pos = question._position;\n\n                let poss = _.map(this.staging.questions, (q) => {return q._position}).sort().reverse();\n                let current_top_question = poss[0];\n\n\n                let pos_transfer_map = {};\n\n                for (let i = 0; i < poss.length; i++) {\n                    const pos = poss[i];\n                    if (pos === current_pos){\n                        pos_transfer_map[pos] = current_top_question;\n                        break;\n                    }\n                    // Since i can never by the last index, we can safely access i-1;\n                    const new_pos = poss[i+1];\n                    pos_transfer_map[pos] = new_pos;\n                }\n\n                for (const qid in this.staging.questions) {\n                    const q2 = this.staging.questions[qid];\n                    if(q2._position in pos_transfer_map){\n                        q2._position = pos_transfer_map[q2._position];\n                    }\n                }\n\n\n            },\n\n            move_up: function(question){\n                // const current_pos = question._position;\n                // let current_top_question = _.maxBy(this.staging.questions, function(q){return q._position});\n                // let poss = _.map(this.staging.questions, (q) => {return q._position}).sort();\n\n                const current_pos = question._position;\n                let next_big_pos = null;\n                let next_big_question = null;\n\n                for (const qid in this.staging.questions){\n                    const q2 = this.staging.questions[qid];\n                    const p = q2._position;\n                    if (p > current_pos){\n                        if (next_big_pos === null || p < next_big_pos){\n                            next_big_pos = p;\n                            next_big_question = q2;\n                        }\n                    }\n                }\n\n                if (next_big_pos !== null){\n                    question._position = next_big_pos;\n                    next_big_question._position = current_pos;\n                }\n\n\n            },\n\n            move_down: function(question){\n                const current_pos = question._position;\n                let next_small_pos = null;\n                let next_small_question = null;\n\n                for (const qid in this.staging.questions){\n                    const q2 = this.staging.questions[qid];\n                    const p = q2._position;\n                    if (p < current_pos){\n                        if (next_small_pos === null || p > next_small_pos){\n                            next_small_pos = p;\n                            next_small_question = q2;\n                        }\n                    }\n                }\n\n                if (next_small_pos !== null){\n                    question._position = next_small_pos;\n                    next_small_question._position = current_pos;\n                }\n            },\n\n            /**\n             * Functions that help question card display.\n             */\n            get_all_answer_surface_form: function(question){\n                const answers = question.answers;\n                if (Object.keys(answers).length === 0){\n                    return \"(The answer is intentionally left empty)\"\n                }else{\n\n                    let answers_surface = [];\n\n                    for(const key in answers){\n                        const answer = answers[key];\n                        answers_surface.push(\n                            this.staging.passage.substring(answer.start, answer.end+1)\n                        );\n                    }\n\n\n                    return _.join(answers_surface, ', ');\n                }\n            },\n\n            /**\n             * Submit user annotations to server.\n             */\n\n            can_submit_fast_check: function(){\n\n                /*if(this.current.question_created < this.required_question_count){\n                    this.show_submission_error(`You have created only ${this.current.question_created} questions, which is less than the required ${this.required_question_count}. (Default questions do not count)`);\n                    return false;\n                }\n\n                if(this.current.default_question_answered_count < this.current.default_question_count){\n                    const diff = this.current.default_question_count - this.current.default_question_answered_count;\n                    this.show_submission_error(`You have ${diff} warm-up questions unanswered, you must answer all of them.`);\n                    return false;\n                }*/\n                return true;\n            },\n\n            create_submission_object: function(){\n                let pass_check = true;\n\n                let generated_events = {};\n                let generated_qas = {\n                    feedback: this.feedback,\n                    mTurkAssignmentId: this.mturk_params.assignmentId,\n                };\n\n                // Do another check to make sure we have enough data to submit.\n                let default_question_answered_count = 0;\n                let question_count = 0;\n\n                for (const key in this.annotations){\n                    const passage = this.annotations[key];\n\n                    const passage_id = passage.passage_id;\n                    const passage_text = passage.passage;\n\n                    const event_response = {\n                        answer: {\n                            spans: [],\n                            indices: [],\n                        },\n                        passageID: passage_id,\n                    };\n\n\n                    const annotated_events = passage.events;\n                    const annotated_qas = passage.questions;\n\n                    for(const qkey in annotated_qas){\n                        const question = annotated_qas[qkey];\n\n                        // if (!question.is_answered){\n                        //     pass_check = false;\n                        // }\n\n                        if (question.is_default_question){\n                            if (question.is_answered){\n                                default_question_answered_count++;\n                            }\n                        }else{\n                            question_count++;\n                        }\n\n                        const question_annotation = {\n                            question: question.text,\n                            answer: {\n                                spans: [],\n                                indices: [],\n                            },\n                            passageID: passage_id,\n                            question_id: question.question_id,\n                            isAnswered: question.is_answered,\n                            is_default_question: question.is_default_question,\n                            derived_from: question.question_is_derived_from,\n                        };\n\n                        for(const ekey in question.answers){\n                            const event = question.answers[ekey];\n                            question_annotation.answer.indices.push(`(${event.start},${event.end+1})`);\n                            question_annotation.answer.spans.push(passage_text.substring(event.start, event.end+1));\n                        }\n\n                        generated_qas[key+\"-\"+qkey] = question_annotation;\n                    }\n\n                    for(const ekey in annotated_events){\n                        const event = annotated_events[ekey];\n                        event_response.answer.indices.push(`(${event.start},${event.end+1})`);\n                        event_response.answer.spans.push(passage_text.substring(event.start, event.end+1));\n                    }\n\n                    const event_key = key + \"-allEvents\";\n                    generated_events[event_key] = event_response;\n                    // question_id: passage_id + \"-question-d1\",\n                    // is_default_question: true,\n                    // question_is_derived_from: null,\n                    // is_answered: false,\n                    // answers: {},\n                    // text: \"What is happening?\",\n                }\n\n                if (default_question_answered_count < 12){\n                    console.log(\"default_question_answered_count : \", default_question_answered_count)\n                }\n\n                if (question_count < this.required_question_count){\n                    console.log(\"question_count : \", question_count )\n                }\n\n                if (pass_check) {\n                    console.log(\"Passed check, ready to submit now.\");\n                    this.generated_answers = JSON.stringify(generated_qas);\n                    this.generated_answers_event = JSON.stringify(generated_events);\n                    this.submission_not_ready = false;\n\n                    this.hide_submission_error();\n\n                    Vue.nextTick(function () {\n                        document.getElementById('mturk-external-submit-form').submit();\n                    });\n\n                    console.log(this.generated_answers);\n                    console.log(this.generated_answers_event);\n                }else{\n                    console.log(\"Check not passed.\");\n                    this.show_submission_error(`You may have unanswered questions.`);\n                }\n            },\n\n            check_before_submit: function(){\n                console.log(this.annotations);\n                console.log(this.feedback);\n\n                if(this.can_submit_fast_check()){\n                    this.create_submission_object();\n                }\n\n            },\n\n            focus_feedback: function(){\n                document.getElementById(\"feedback-form\").focus();\n            },\n\n            /**\n             *\n             * Functions for handling passage switching.\n             *\n             */\n\n            previous_passage: function(){\n                // const passage_id = Math.max(this.staging.passage_id-1, 0);\n                const total_num_of_passages = Object.keys(this.annotations).length;\n                const passage_id = (this.staging.passage_id - 1 + total_num_of_passages) % total_num_of_passages;\n\n                if (passage_id === this.staging.passage_id){\n                    return;\n                }\n\n                this.save_staged_passage();\n                this.stage_new_passage(passage_id);\n            },\n\n            next_passage: function(){\n\n                // const passage_id = Math.min(this.staging.passage_id+1, Object.keys(this.annotations).length - 1);\n                const passage_id = (this.staging.passage_id+1) % Object.keys(this.annotations).length;\n\n                if (passage_id === this.staging.passage_id){\n                    return;\n                }\n\n                this.save_staged_passage();\n                this.stage_new_passage(passage_id);\n            },\n\n\n            stage_new_passage: function(passage_id){\n                this.clear_selection();\n                this.reset_highlight_map();\n                this.staging.passage_id = passage_id;\n                const annotation = this.annotations[passage_id];\n                const has_events = Object.keys(annotation.events).length > 0;\n\n                this.staging.passage = annotation.passage;\n                this.staging.questions = annotation.questions;\n                this.staging.events = annotation.events;\n\n                if(has_events){\n                    this.staging.showing_qa_panel = true;\n                    this.do_highlight_all_event_selection();\n                }else{\n                    this.staging.showing_qa_panel = false;\n                }\n\n            },\n            /**\n             * Save whatever user has changed.\n             */\n            save_staged_passage: function(){\n                const existing_annotation = this.annotations[this.staging.passage_id];\n                existing_annotation.events = this.staging.events;\n                existing_annotation.questions = this.staging.questions;\n            },\n\n            /*************************************************************************************\n             *\n             * Below methods are used to handling span selections.\n             *\n             ************************************************************************************/\n\n            mousedown_text: function(index){\n                this.current.selection.start = index;\n                this.current.selection.state = \"selecting\";\n            },\n\n            mouseup_text: function(index){\n                this.current.selection.end = index;\n                this.current.selection.state = \"none\";\n                let _start = Math.min(this.current.selection.start, this.current.selection.end);\n                let _end = Math.max(this.current.selection.start, this.current.selection.end);\n                this.current.selection.start = _start;\n                this.current.selection.end = _end;\n            },\n\n            mouseenter_text: function(index){\n                this.current.selection.current = index;\n            },\n\n            /**\n             * invalidate the current selection, this happens when mouse moved out of the selection scope.\n             */\n            invalidate_selection: function(){\n                if (this.current.selection.state !== \"none\"){\n                    this.clear_selection();\n                }\n\n            },\n\n            /**\n             * Should the current char be highlighted as part of the selection process?\n             */\n            is_in_selection_highlight: function(idx){\n                if(this.current.selection.state === \"selecting\"){\n                    return (idx >= Math.min(this.current.selection.current, this.current.selection.start)) && (idx <= Math.max(this.current.selection.current, this.current.selection.start))\n                }\n\n                if(this.current.selection.state === \"none\"){\n                    return (idx >= this.current.selection.start) && (idx <= this.current.selection.end);\n                }\n\n                return false;\n\n            },\n            /**\n             * When double click on a char, it automatically expand to the entire word.\n             */\n            double_clicked_text: function(index){\n                function shouldStop(char){\n                    return char === \" \" || char === \".\" ||\n                        char === \",\" || char === \"?\" ||\n                        char === \"'\" || char === '\"' ||\n                        char === \"!\" || char === \";\" ||\n                        char === \":\"\n                        ;\n                }\n                let end = this.staging.passage.length - 1;\n                for (let i = index; i < this.staging.passage.length; i++){\n                    if(shouldStop(this.staging.passage[i])){\n                        end = i - 1;\n                        break;\n                    }\n                }\n\n                let start = 0;\n                for (let i = index; i > 0; i--){\n                    if(shouldStop(this.staging.passage[i])){\n                        start = i + 1;\n                        break;\n                    }\n                }\n                this.current.selection.start = start;\n                this.current.selection.end = end;\n            },\n\n            clear_selection: function(remove_question = true){\n                this.current.selection.state = \"none\";\n                this.current.selection.start = -1;\n                this.current.selection.end = -1;\n                this.current.selection.current = -1;\n\n                if (remove_question) {\n                    this.staging.current_question._position = null;\n                    this.staging.current_question.answers = {};\n                    this.staging.current_question.is_default_question = false;\n                    this.staging.current_question.question_id = null;\n                    this.staging.current_question.question_is_derived_from = null;\n                    this.staging.current_question.text = \"\";\n                }\n\n            },\n\n            get_new_question_order_counter: function(){\n                let ret = this.question_order_counter;\n                this.question_order_counter += 1;\n                return ret;\n            }\n\n        },\n\n        /**\n         * For display formatting.\n         */\n        filters: {\n            currency: function(value){\n                return value.toFixed(2);\n            }\n        },\n\n    }\n</script>\n\n<style>\n    .noselect {\n        -webkit-touch-callout: none; /* iOS Safari */\n        -webkit-user-select: none; /* Safari */\n        -khtml-user-select: none; /* Konqueror HTML */\n        -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n        user-select: none; /* Non-prefixed version, currently\n                                supported by Chrome, Opera and Firefox */\n    }\n\n    .passage-display-box span.highlight{\n        background: yellow;\n    }\n\n    .passage-display-box .passage-text span{\n        cursor: text\n    }\n    /*.passage-display-box span:hover{*/\n    /*background: lightskyblue;*/\n    /*}*/\n\n    .passage-display-box span.select_highlight{\n        background: lightskyblue;\n    }\n\n    form.hidden {\n        display: none;\n    }\n\n    .passage-display-box span.is_selected_answer{\n        color: red;\n        font-style: italic;\n        border-bottom: thick solid rgb(0, 0, 255);\n    }\n\n    div.inline_div{\n        display: inline;\n    }\n\n    .flip-list-move {\n        transition: transform 1s;\n    }\n    .nav-item.active{\n        /*color: red !important;*/\n        border-bottom-style: solid !important;\n        border-bottom: 0px red !important;\n        cursor: pointer;\n    }\n\n    .nav-item{\n        /*color: red !important;*/\n        border-bottom: 2px grey !important;\n        border-bottom-style: dotted !important;\n\n        cursor: pointer;\n    }\n    .button-question-tooltip{\n        width: 1.5em;\n        height: 1.5em;\n\n        font-size: small;\n        color: #CCC;\n        text-shadow: 1px #CCC;\n\n        border: 1px solid #CCC;\n        border-radius: 25px;\n        box-shadow: 0.1em #CCC;\n\n        display: inline-block;\n    }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ValidationView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ValidationView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ValidationView.vue?vue&type=template&id=9eb703f4&\"\nimport script from \"./ValidationView.vue?vue&type=script&lang=js&\"\nexport * from \"./ValidationView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ValidationView.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './ValidationView.vue'\n\nVue.config.productionTip = false;\n\nnew Vue({\n    render: h => h(App),\n}).$mount('#app');\n"],"sourceRoot":""}